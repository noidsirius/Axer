apply plugin: 'com.android.library'
apply plugin: 'com.dicedmelon.gradle.jacoco-android'
buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.5'
    }
}

jacoco {
    toolVersion = "0.8.4"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}


android {
    compileSdkVersion 31
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
//    implementation fileTree(dir: "libs", include: ["*.aar"])
    implementation project(path: ':utils')
    implementation 'com.google.android.apps.common.testing.accessibility.framework:accessibility-test-framework:4.0.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:4.6.1"
    implementation 'com.google.guava:guava:31.0-jre'
    implementation (group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1') {
        exclude group: 'junit', module: 'junit'
    }
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}
task wrapper(type: Wrapper){
    gradleVersion = '7.2'
}